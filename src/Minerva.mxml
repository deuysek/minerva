<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
                       xmlns:s="library://ns.adobe.com/flex/spark"
                       xmlns:mx="library://ns.adobe.com/flex/mx"
                       width="960" height="590" addedToStage="initTracker()"
                       creationComplete="init()" frameRate="90" showStatusBar="false">

    <fx:Style source="style/style.css">
        @namespace s "library://ns.adobe.com/flex/spark";
        @namespace mx "library://ns.adobe.com/flex/mx";
    </fx:Style>

    <fx:Script source="com/coursevector/minerva/Main.as"/>
    <fx:Script><![CDATA[
        /**
         * 获取值用的函数
         * @param item
         * @param grid
         * @return
         */
        private function getItemValue(item:Object, grid:GridColumn):String {
            if (!item) return "";
            if (!item.value) return item.type;
            if (item.value is ByteArray || item.value is Array) return item.type;
            var str:String = item.value.toString();
            if (str.length > 15) {
                return str.substr(0, 15) + "...";
            }
            return str;
        }
        ]]></fx:Script>

    <fx:Declarations>
        <!--<s:Parallel id="EffOut">
            <s:Fade alphaFrom="1.0" alphaTo="0.0" duration="100"/>
        </s:Parallel>
        <s:Parallel id="EffIn">
            <s:Fade alphaFrom="0.0" alphaTo="1.0" duration="100"/>
        </s:Parallel>-->
        <s:Fade id="EffOut" alphaFrom="1.0" alphaTo="0.0" duration="100"/>
        <s:Fade id="EffIn" alphaFrom="0.0" alphaTo="1.0" duration="100"/>

        <s:ArrayCollection id="pageGroup">
            <fx:Object label="{langPack.PageTab.SolEditor}" index="0"
                       tooltip="{langPack.PageTab.SolEditorDes}"/>
            <fx:Object label="{langPack.PageTab.CodeBeautifier}" index="1"
                       tooltip="{langPack.PageTab.CodeBeautifierDes}"/>
        </s:ArrayCollection>

        <s:ArrayCollection id="compressMethod">
            <fx:Object value="zlib" label="{langPack.CompressMethod.Zlib}" index="0"/>
            <fx:Object value="deflate" label="{langPack.CompressMethod.Deflate}" index="1"/>
            <fx:Object value="lzma" label="{langPack.CompressMethod.LZMA}" index="2"/>
        </s:ArrayCollection>

        <s:ArrayCollection id="byteDispType">
            <fx:Object value="utf8" editable="false" label="{langPack.BytesDisplay.StringUtf8}" index="0"/>
            <fx:Object value="utf16" editable="false" label="{langPack.BytesDisplay.StringUtf16}" index="1"/>
            <fx:Object value="gb2312" editable="false" label="{langPack.BytesDisplay.StringGB2312}" index="2"/>
            <fx:Object value="base64" editable="true" label="{langPack.BytesDisplay.Base64String}" index="3"/>
            <fx:Object value="bitmap" editable="false" label="{langPack.BytesDisplay.BitmapData}" index="4"/>
            <fx:Object value="rawHex" editable="true" label="{langPack.BytesDisplay.RawHex}" index="5"/>
            <fx:Object value="object" editable="false" label="{langPack.BytesDisplay.Object}" index="6"/>
        </s:ArrayCollection>

        <s:ArrayCollection id="indentType">
            <fx:Object label="{langPack.CodeFormat.IndentTab}" value="1"/>
            <fx:Object label="{langPack.CodeFormat.Indent2Space}" value="2"/>
            <fx:Object label="{langPack.CodeFormat.Indent4Space}" value="4"/>
            <fx:Object label="{langPack.CodeFormat.Indent8Space}" value="8"/>
        </s:ArrayCollection>

    </fx:Declarations>

    <s:Panel width="100%" height="100%" includeInLayout="true" title="Minerva">
        <s:controlBarContent>
            <s:ButtonBar height="100%" change="onChangePage(event)" dataProvider="{pageGroup}"
                         labelField="label" requireSelection="true" selectedIndex="0">
                <s:itemRenderer>
                    <fx:Component>
                        <s:ButtonBarButton toolTip="{data.toolTip}"/>
                    </fx:Component>
                </s:itemRenderer>
            </s:ButtonBar>
            <s:Spacer width="100%" height="30"/>
            <mx:Button visible="{showOpen}" height="100%" label="{langPack.FileOperate.Open}"
                       click="fileOpen()" icon="@Embed(source='assets/icons/documentOpenIcon.png')"
                       includeInLayout="{showOpen}"/>
            <mx:Button visible="{showSave}" height="100%" label="{langPack.FileOperate.Save}"
                       click="fileSave()" icon="@Embed(source='assets/icons/saveIcon.png')"
                       includeInLayout="{showSave}"/>
            <mx:Button visible="{showSave}" height="100%" label="{langPack.FileOperate.SaveAs}"
                       click="fileSaveAs()" icon="@Embed(source='assets/icons/saveAsIcon.png')"
                       includeInLayout="{showSave}"/>
            <mx:Button visible="{showSave}" height="100%" label="{langPack.FileOperate.ExportJSON}"
                       click="fileSaveAsJSON()" icon="@Embed(source='assets/icons/saveAsIcon.png')"
                       includeInLayout="{showSave}"/>
            <mx:Button visible="{showSave}" height="100%" label="{langPack.FileOperate.Close}"
                       click="fileClose()" includeInLayout="{showSave}"/>
            <s:Image height="100%" click="onClickAbout()"
                     source="@Embed(source='assets/icons/helpIcon.png')"
                     toolTip="{langPack.About.About}" verticalAlign="middle"/>
        </s:controlBarContent>
        <mx:ViewStack id="vsNav" width="100%" height="100%" creationPolicy="all" selectedIndex="0" paddingRight="10"
                      paddingLeft="10" paddingTop="10" paddingBottom="10">
            <s:NavigatorContent id="canReader" width="100%" height="100%" label="{langPack.PageTab.SolEditor}"
                                hideEffect="{EffOut}" showEffect="{EffIn}">
                <s:VGroup width="100%" height="100%">
                    <s:HGroup width="100%" verticalAlign="middle">
                        <s:HGroup width="50%" horizontalAlign="left">
                            <s:Button id="btnInsert" label="{langPack.EditorOperate.Insert}"
                                      click="onClickInsert()" enabled="{hasFile}"
                                      toolTip="{langPack.EditorOperate.Insert}"/>
                            <s:Button id="btnRemove" label="{langPack.EditorOperate.Remove}"
                                      click="onClickRemove()" enabled="{hasFile}"
                                      toolTip="{langPack.EditorOperate.Remove}"/>
                        </s:HGroup>
                        <s:HGroup width="50%" horizontalAlign="right">
                            <s:Label height="100%" text="{langPack.EditorOperate.SortMethod}"
                                     verticalAlign="middle"/>
                            <mx:ComboBox id="cbSort" change="onChangeSort(event)" editable="false"
                                         selectedIndex="0">
                                <mx:dataProvider>
                                    <fx:Object label="{langPack.EditorOperate.SortNameAsc}"
                                               data="name-asc"
                                               tooltip="{langPack.EditorOperate.SortNameAsc}"/>
                                    <fx:Object label="{langPack.EditorOperate.SortNameDes}"
                                               data="name-desc"
                                               tooltip="{langPack.EditorOperate.SortNameDes}"/>
                                    <fx:Object label="{langPack.EditorOperate.SortTypeAsc}"
                                               data="type-asc"
                                               tooltip="{langPack.EditorOperate.SortTypeAsc}"/>
                                    <fx:Object label="{langPack.EditorOperate.SortTypeDes}"
                                               data="type-desc"
                                               tooltip="{langPack.EditorOperate.SortTypeDes}"/>
                                </mx:dataProvider>
                            </mx:ComboBox>
                            <s:Button id="btnRefresh" label="{langPack.EditorOperate.Refresh}"
                                      click="onClickRefresh()" enabled="{hasFile}"
                                      icon="@Embed(source='assets/icons/refresh.png')"
                                      toolTip="{langPack.EditorOperate.RefreshDes}"/>
                        </s:HGroup>
                    </s:HGroup>
                    <mx:HDividedBox width="100%" height="100%">
                        <mx:Tree id="dataTree" width="75%" height="100%" change="treeChanged(event)"
                                 dataTipFunction="treeTip" doubleClickEnabled="true"
                                 editable="{hasFile}" editorXOffset="25" editorYOffset="0"
                                 iconFunction="treeIcon" itemDoubleClick="treeDoubleClick(event)"
                                 itemEditBegin="treeEditBegin(event)"
                                 itemEditBeginning="treeEditBeginning(event)"
                                 itemEditEnd="treeEditEnd(event)" itemRollOver="treeOverHandler(event)"
                                 keyDown="treeKeyDown(event)" labelFunction="treeLabel"
                                 showDataTips="true" useRollOver="true"/>

                        <s:BorderContainer width="100%" height="100%" backgroundAlpha="0.3">
                            <mx:ViewStack id="vsType" visible="{showInspector}" width="100%" height="100%"
                                          paddingTop="5" paddingRight="5" paddingBottom="5" paddingLeft="5"
                                          creationPolicy="all" hideEffect="{EffOut}" showEffect="{EffIn}">

                                <s:NavigatorContent id="InfoType" hideEffect="{EffOut}" showEffect="{EffIn}"
                                                    width="100%"
                                                    height="100%">
                                    <s:HGroup verticalAlign="middle" horizontalAlign="left">
                                        <s:Label text="{langPack.TypeForm.Info.Name}"/>
                                    </s:HGroup>
                                </s:NavigatorContent>

                                <s:NavigatorContent id="EmptyType" hideEffect="{EffOut}" showEffect="{EffIn}"
                                                    width="100%"
                                                    height="100%">
                                    <s:HGroup verticalAlign="middle" horizontalAlign="left">
                                        <s:Label text="{langPack.TypeForm.Empty.Name}"/>
                                        <mx:ComboBox id="ddEmptyType"
                                                     change="treeValueChanged(event, ddEmptyType.selectedLabel, null)"
                                                     dataProvider="{arrDataTypes}" selectedIndex="1"/>
                                    </s:HGroup>
                                </s:NavigatorContent>

                                <s:NavigatorContent id="ArrayType" hideEffect="{EffOut}" showEffect="{EffIn}"
                                                    width="100%" height="100%">
                                    <s:VGroup height="100%" width="100%">
                                        <s:Label text="{langPack.TypeForm.Array.Name}" fontSize="20" fontWeight="bold"/>
                                        <s:Label text="{langPack.TypeForm.Array.Hint}"/>
                                        <s:DataGrid dataProvider="{new ArrayCollection(dataTree.selectedItem.children)}"
                                                    width="100%" height="100%"
                                                    selectionChange="dataTree.expandItem(dataTree.selectedItem,true,true);
                                                dataTree.selectedItem = dataTree.selectedItem.children[event.target.selectedIndex];
                                                dataTree.dispatchEvent(new ListEvent(ListEvent.CHANGE));">
                                            <s:columns>
                                                <s:ArrayList>
                                                    <s:GridColumn dataField="name"
                                                                  headerText="{langPack.TypeForm.Array.PrevTitleIndex}"/>
                                                    <s:GridColumn dataField="type"
                                                                  headerText="{langPack.TypeForm.Array.PrevTitleType}"/>
                                                    <s:GridColumn dataField="value"
                                                                  headerText="{langPack.TypeForm.Array.PrevTitleValue}"
                                                                  labelFunction="{getItemValue}"/>
                                                </s:ArrayList>
                                            </s:columns>
                                        </s:DataGrid>
                                    </s:VGroup>
                                </s:NavigatorContent>

                                <s:NavigatorContent id="ObjectType" hideEffect="{EffOut}" showEffect="{EffIn}"
                                                    width="100%" height="100%">
                                    <s:VGroup width="100%" height="100%">
                                        <s:Label text="{langPack.TypeForm.Object.Name}" fontSize="20"
                                                 fontWeight="bold"/>
                                        <s:Label text="{langPack.TypeForm.Object.Hint}"/>
                                        <s:DataGrid dataProvider="{new ArrayCollection(dataTree.selectedItem.children)}"
                                                    width="100%" height="100%"
                                                    selectionChange="dataTree.expandItem(dataTree.selectedItem,true,true);
                                                dataTree.selectedItem = dataTree.selectedItem.children[event.target.selectedIndex];
                                                dataTree.dispatchEvent(new ListEvent(ListEvent.CHANGE));">
                                            <s:columns>
                                                <s:ArrayList>
                                                    <s:GridColumn dataField="name"
                                                                  headerText="{langPack.TypeForm.Object.PrevTitleIndex}"/>
                                                    <s:GridColumn dataField="type"
                                                                  headerText="{langPack.TypeForm.Object.PrevTitleType}"/>
                                                    <s:GridColumn dataField="value"
                                                                  headerText="{langPack.TypeForm.Object.PrevTitleValue}"
                                                                  labelFunction="{getItemValue}"/>
                                                </s:ArrayList>
                                            </s:columns>
                                        </s:DataGrid>
                                    </s:VGroup>
                                </s:NavigatorContent>

                                <s:NavigatorContent id="NumberType" hideEffect="{EffOut}" showEffect="{EffIn}"
                                                    width="100%" height="100%">
                                    <s:VGroup width="100%" height="100%" gap="10">
                                        <s:Label text="{langPack.TypeForm.Number.Name}" fontSize="20"
                                                 fontWeight="bold"/>
                                        <s:TextInput id="numberValueInput" width="100%"
                                                     change="treeValueChanged(event, 'invalid', numberValueInput.text)"
                                                     editable="true"/>
                                        <s:Spacer width="100%"/>
                                        <s:Label text="{langPack.TypeForm.Number.Hint}"/>
                                    </s:VGroup>
                                </s:NavigatorContent>

                                <s:NavigatorContent id="BooleanType" hideEffect="{EffOut}" showEffect="{EffIn}"
                                                    width="100%" height="100%">
                                    <s:VGroup width="100%" height="100%" gap="10">
                                        <s:Label text="{langPack.TypeForm.Boolean.Name}" fontSize="20"
                                                 fontWeight="bold"/>
                                        <s:HGroup verticalAlign="middle" horizontalAlign="left">
                                            <s:RadioButton id="radTrue" label="True"
                                                            change="treeValueChanged(event, 'invalid', true)"
                                                            enabled="true" groupName="rgBoolean"/>
                                            <s:RadioButton id="radFalse" label="False"
                                                            change="treeValueChanged(event, 'invalid', false)"
                                                            enabled="true" groupName="rgBoolean"/>
                                        </s:HGroup>
                                    </s:VGroup>
                                </s:NavigatorContent>

                                <s:NavigatorContent id="StringType" hideEffect="{EffOut}" showEffect="{EffIn}"
                                                    width="100%" height="100%">
                                    <s:VGroup width="100%" height="100%">
                                        <s:Label text="{langPack.TypeForm.String.Name}" fontSize="20"
                                                 fontWeight="bold"/>
                                        <s:HGroup width="100%" gap="7">
                                            <s:Button id="btnBase64Encode" width="25%" height="100%"
                                                      label="{langPack.TypeForm.String.Base64Encode}"
                                                      click="base64Encode(event, stringValueInput.text)"/>
                                            <s:Button id="btnBase64Decode" width="25%" height="100%"
                                                      label="{langPack.TypeForm.String.Base64Decode}"
                                                      click="base64Decode(event, stringValueInput.text)"/>
                                            <s:Button id="btnUriEncode" width="25%" height="100%"
                                                      label="{langPack.TypeForm.String.UriEncode}"
                                                      click="uriEncode(event, stringValueInput.text)"/>
                                            <s:Button id="btnUriDecode" width="25%" height="100%"
                                                      label="{langPack.TypeForm.String.UriDecode}"
                                                      click="uriDecode(event, stringValueInput.text)"/>
                                        </s:HGroup>
                                        <s:TextArea id="stringValueInput" width="100%" height="100%"
                                                    change="treeValueChanged(event, 'invalid', stringValueInput.text)"
                                                    editable="true" horizontalScrollPolicy="auto"
                                                    verticalScrollPolicy="auto"/>
                                    </s:VGroup>
                                </s:NavigatorContent>

                                <s:NavigatorContent id="ByteArrayType" hideEffect="{EffOut}" showEffect="{EffIn}"
                                                    width="100%" height="100%">
                                    <s:VGroup gap="5" width="100%" height="100%">
                                        <s:Label text="{langPack.TypeForm.ByteArray.Name}" fontSize="20"
                                                 fontWeight="bold"/>
                                        <s:HGroup gap="10" width="100%" horizontalAlign="left" verticalAlign="middle">
                                            <s:Label text="{langPack.BytesDisplay.Title}:" textAlign="center"
                                                     width="20%"/>
                                            <s:DropDownList id="bytesDispCombo" dataProvider="{byteDispType}"
                                                            selectedIndex="0" height="100%" width="40%"
                                                            change="displayByteArray()"/>
                                        </s:HGroup>
                                        <s:HGroup gap="10" width="100%" horizontalAlign="left" verticalAlign="middle">
                                            <s:Label text="{langPack.CompressMethod.Title}:" textAlign="center"
                                                     width="20%"/>
                                            <s:DropDownList id="compressMethodCombo" dataProvider="{compressMethod}"
                                                            selectedIndex="0" width="40%"/>
                                            <s:Button id="btnCompress" label="{langPack.CompressMethod.Compress}"
                                                      click="compressByteArray(event)" width="15%"/>
                                            <s:Button id="btnUncompress" label="{langPack.CompressMethod.Uncompress}"
                                                      click="uncompressByteArray(event)" width="15%"/>
                                        </s:HGroup>
                                        <mx:ViewStack width="100%" height="100%"
                                                      selectedIndex="{bytesDispCombo.selectedItem.value == 'bitmap' ? 0 : 1}">
                                            <s:NavigatorContent width="100%" height="100%">
                                                <s:VGroup gap="5" width="100%" height="100%" paddingLeft="10"
                                                          paddingRight="10" paddingTop="10" paddingBottom="10">
                                                    <s:BorderContainer width="100%" height="100%">
                                                        <s:Scroller width="100%" height="100%">
                                                            <s:Group clipAndEnableScrolling="true" width="100%"
                                                                     height="100%">
                                                                <s:BorderContainer
                                                                        backgroundColor="{byteBitmapBgColor.selectedColor}">
                                                                    <s:BitmapImage id="byteBitmap" smooth="true"
                                                                                   smoothingQuality="high"
                                                                                   clearOnLoad="true"
                                                                                   complete="{byteBitmapSize.text = byteBitmap.bitmapData ? (byteBitmap.bitmapData.width + 'x' + byteBitmap.bitmapData.height) : '0x0'}"/>
                                                                </s:BorderContainer>
                                                            </s:Group>
                                                        </s:Scroller>
                                                    </s:BorderContainer>
                                                    <s:HGroup gap="10" verticalAlign="middle" horizontalAlign="center"
                                                              width="100%">
                                                        <s:Label text="{langPack.TypeForm.ByteArray.BitmapSize}:"/>
                                                        <s:Label id="byteBitmapSize"/>
                                                        <s:Spacer/>
                                                        <s:Label text="{langPack.TypeForm.ByteArray.BgColor}:"/>
                                                        <mx:ColorPicker id="byteBitmapBgColor" color="black"/>
                                                        <s:Spacer/>
                                                        <s:Button label="{langPack.TypeForm.ByteArray.ZoomIn}"
                                                                  click="{byteBitmap.scaleX += 0.2; byteBitmap.scaleY += 0.2}"
                                                                  height="100%"/>
                                                        <s:Button label="{langPack.TypeForm.ByteArray.ZoomOut}"
                                                                  click="{byteBitmap.scaleX -= 0.2; byteBitmap.scaleY -= 0.2}"
                                                                  height="100%"/>
                                                    </s:HGroup>
                                                </s:VGroup>
                                            </s:NavigatorContent>
                                            <s:NavigatorContent width="100%" height="100%">
                                                <s:VGroup width="100%" height="100%">
                                                    <s:TextArea id="byteText" width="100%" height="100%"
                                                                text="ByteArrayText"/>
                                                    <s:HGroup width="100%" horizontalAlign="center"
                                                              verticalAlign="middle"
                                                              gap="20">
                                                        <s:Button label="{langPack.TypeForm.ByteArray.Export}"
                                                                  toolTip="{langPack.TypeForm.ByteArray.ExportDes}"
                                                                  click="new File().save(dataTree.selectedItem.value,'Export.bin')"/>
                                                        <s:Button label="{langPack.TypeForm.ByteArray.Import}"
                                                                  toolTip="{langPack.TypeForm.ByteArray.ImportDes}"/>
                                                        <s:Spacer width="100%"/>
                                                        <s:Button label="{langPack.TypeForm.ByteArray.Compile}"
                                                                  toolTip="{langPack.TypeForm.ByteArray.CompileDes}"
                                                                  click="{bytesDispCombo.selectedItem.editable ? compile2bin(AlertBox.YES) : AlertBox.show(langPack.TypeForm.ByteArray.EditNotSafe,'',AlertBox.OK | AlertBox.CANCEL,this,compile2bin)}"
                                                                  height="100%"/>
                                                    </s:HGroup>
                                                </s:VGroup>
                                            </s:NavigatorContent>
                                        </mx:ViewStack>
                                    </s:VGroup>
                                </s:NavigatorContent>

                                <s:NavigatorContent id="DateType" hideEffect="{EffOut}" showEffect="{EffIn}"
                                                    width="100%"
                                                    height="100%">
                                    <s:VGroup>
                                        <s:Label text="{langPack.TypeForm.Date.Name}" fontSize="20" fontWeight="bold"/>
                                        <s:HGroup width="100%" gap="7">
                                            <s:Label height="100%" text="{langPack.TypeForm.Date.Date}:"
                                                     verticalAlign="middle"/>
                                            <mx:DateField id="dateDF"
                                                          change="treeValueChanged(event, 'invalid', dateDF.selectedDate, txtHour.text, txtMin.text, txtSec.text)"
                                                          formatString="YYYY/MM/DD" showToday="true"
                                                          yearNavigationEnabled="true"/>
                                        </s:HGroup>
                                        <s:HGroup width="100%" gap="10">
                                            <s:Label height="100%" text="{langPack.TypeForm.Date.Time}:"
                                                     verticalAlign="middle"/>
                                            <s:TextInput id="txtHour" width="40"
                                                         change="treeValueChanged(event, 'invalid', dateDF.selectedDate, txtHour.text, txtMin.text, txtSec.text)"
                                                         editable="true" maxChars="2" restrict="0123456789"
                                                         textAlign="center"/>
                                            <s:Label width="10" height="100%" text=":" verticalAlign="middle"/>
                                            <s:TextInput id="txtMin" width="40"
                                                         change="treeValueChanged(event, 'invalid', dateDF.selectedDate, txtHour.text, txtMin.text, txtSec.text)"
                                                         editable="true" maxChars="2" restrict="0123456789"
                                                         textAlign="center"/>
                                            <s:Label width="10" height="100%" text=":" verticalAlign="middle"/>
                                            <s:TextInput id="txtSec" width="40"
                                                         change="treeValueChanged(event, 'invalid', dateDF.selectedDate, txtHour.text, txtMin.text, txtSec.text)"
                                                         editable="true" maxChars="3" restrict="0123456789"
                                                         textAlign="right"/>
                                        </s:HGroup>
                                    </s:VGroup>
                                </s:NavigatorContent>
                            </mx:ViewStack>
                        </s:BorderContainer>
                    </mx:HDividedBox>
                </s:VGroup>
            </s:NavigatorContent>

            <s:NavigatorContent id="canCode" width="100%" height="100%"
                                label="{langPack.PageTab.CodeBeautifier}" hideEffect="{EffOut}" showEffect="{EffIn}">
                <s:VGroup width="100%" height="100%" gap="10">
                    <s:HGroup width="100%" horizontalAlign="center" gap="10" verticalAlign="middle">
                        <mx:ComboBox id="ddSize" change="updateConfig()" selectedIndex="0" dataProvider="{indentType}"/>
                        <mx:CheckBox id="cbBraces" label="{langPack.CodeFormat.BraceInNewLine}"
                                     change="updateConfig()"/>
                        <mx:CheckBox id="cbPreserve" label="{langPack.CodeFormat.PreserverBlankLine}"
                                     change="updateConfig()" selected="true"/>
                        <!--<mx:CheckBox id="cbKeepIndentation" label="" change="updateConfig()"/>-->
                    </s:HGroup>
                    <s:TextArea id="txtCode" width="100%" height="100%" editable="true" enabled="true"
                                 horizontalScrollPolicy="auto" textAlign="left"/>
                    <s:Button id="btnFormat" width="100%" height="40"
                               label="{langPack.CodeFormat.DoFormat}" click="formatHandler(event)"/>
                </s:VGroup>
            </s:NavigatorContent>
        </mx:ViewStack>
    </s:Panel>
</s:WindowedApplication>